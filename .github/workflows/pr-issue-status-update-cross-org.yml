name: PR Issue Status Update

on:
  pull_request:
    types: [opened, synchronize, ready_for_review, closed]

permissions:
  issues: write
  pull-requests: read

jobs:
  update-linked-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Extract issue number from PR
        id: extract
        run: |
          echo "🔍 Extracting issue number from PR title and body..."
          
          # Extract issue number from PR title (format: #123 or fixes #123)
          ISSUE_NUMBER=$(echo "${{ github.event.pull_request.title }}" | grep -o -E '(#|fixes #|closes #|resolves #)[0-9]+' | grep -o '[0-9]\+' | head -1)
          
          # If not found in title, check PR body
          if [ -z "$ISSUE_NUMBER" ]; then
            ISSUE_NUMBER=$(echo "${{ github.event.pull_request.body }}" | grep -o -E '(#|fixes #|closes #|resolves #)[0-9]+' | grep -o '[0-9]\+' | head -1)
          fi
          
          if [ -n "$ISSUE_NUMBER" ]; then
            echo "✅ Found issue #$ISSUE_NUMBER"
            echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          else
            echo "⚠️ No issue number found in PR title or body"
          fi

      - name: Determine new status
        id: status
        if: steps.extract.outputs.issue_number
        run: |
          # Determine the new status based on PR event
          if [[ "${{ github.event.action }}" == "closed" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
            STATUS="Done"
          elif [[ "${{ github.event.action }}" == "ready_for_review" || "${{ github.event.action }}" == "opened" ]]; then
            STATUS="Waiting for Review"
          else
            STATUS="In Progress"
          fi
          
          echo "📝 New status: $STATUS"
          echo "status=$STATUS" >> $GITHUB_OUTPUT

      - name: Update issue status
        if: steps.extract.outputs.issue_number && steps.status.outputs.status
        uses: idynic/idynic-github-actions/update-issue-status@main
        with:
          issue-number: ${{ steps.extract.outputs.issue_number }}
          status: ${{ steps.status.outputs.status }}
          token: ${{ secrets.PROJECT_TOKEN }}
          organization: ${{ github.repository_owner }}

      - name: Add comment to issue
        if: steps.extract.outputs.issue_number && steps.status.outputs.status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = ${{ steps.extract.outputs.issue_number }};
            const prNumber = ${{ github.event.pull_request.number }};
            const prUrl = '${{ github.event.pull_request.html_url }}';
            const status = '${{ steps.status.outputs.status }}';
            const action = '${{ github.event.action }}';
            
            let message = '';
            if (action === 'opened') {
              message = `🔗 Pull Request #${prNumber} has been opened for this issue: ${prUrl}\n\n✅ Status updated to: **${status}**`;
            } else if (action === 'closed' && '${{ github.event.pull_request.merged }}' === 'true') {
              message = `🎉 Pull Request #${prNumber} has been merged!\n\n✅ Status updated to: **${status}**`;
            } else if (action === 'closed') {
              message = `❌ Pull Request #${prNumber} was closed without merging.`;
            } else if (action === 'ready_for_review') {
              message = `📋 Pull Request #${prNumber} is ready for review!\n\n✅ Status updated to: **${status}**`;
            }
            
            if (message) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: message
              });
            }